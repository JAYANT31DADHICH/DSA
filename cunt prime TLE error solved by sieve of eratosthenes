#include<iostream>
using namespace std;

bool isPrime(int n){
    if(n<=1){
        return false;
    }
    for(int i=2;i<n;i++){
        if(n%i==0){
            return false;
        }
        
    }
    return true;
}
void countPrime(int n){
    int count=0;
    for(int i=0;i<n;i++){
        if(isPrime(i)){
            count++;
        }
    }
   // return count;
   cout<<"count is:"<<count<<endl;
    
}

int main(){
    int n;
    cout<<"enter the number"<<endl;
    cin>>n;
    
    if(isPrime(n)){
        cout<<"is prime"<<endl;
    }
    else{
        cout<<"not prime"<<endl;
    }
    
    countPrime(n);
    
}


// the above code is giving TLE so need to solve it by sieve of eratosthenes
class Solution {
public:
    int countPrimes(int n) {
        vector<bool> prime(n+1,true);
            prime[0]=false;
            prime[1]=false;
            for(int i=0;i*i<n;i++){
                if(prime[i]==true){
                    for(int j=2;j*i<=n;j++){
                        prime[j*i]=false;
                    }
                }
            }
            int count=0;
            for(int i=0;i<n;i++){
                if(prime[i]==true){
                    count++;
                }
            }
            return count;
    }
};
